package com.xiang.pentest;

import android.os.Handler;
import android.os.HandlerThread;
import android.os.Looper;
import android.os.Message;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import org.w3c.dom.Text;

import java.util.ArrayList;
import java.util.Collections;
import java.util.LinkedList;
import java.util.List;
import java.util.TreeMap;
import java.util.stream.IntStream;

public class MainActivity extends AppCompatActivity {
    private static final boolean DEBUG = true;
    private static final String TAG = "pentest.MainActivity";
    private Draw draw;
    private Button bt_clear;
    private Button bt_touch;
    private TextView tv_allView;
    Handler handler;


    private LineGraphicView lineView;
    ArrayList<Double> yList;
    ArrayList<String> xRawDatas = new ArrayList<String>();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        draw = (Draw) findViewById(R.id.draw);
        bt_clear = (Button) findViewById(R.id.bt_clear);
        bt_touch = (Button) findViewById(R.id.bt_touch);
        tv_allView = (TextView) findViewById(R.id.tv_allView);

        lineView = (LineGraphicView) findViewById(R.id.lineView);



        handler = new Handler() {
            @Override
            public void handleMessage(Message msg) {
                // count
                long c = draw.getCount();
                tv_allView.setText("PointNub: " + String.valueOf(c) + "\n");

                // density
                List<Long> list1 = draw.getXTimeList();
                int tmp = (int)computeVariance(list1);
                tv_allView.append("Density: " + String.valueOf(tmp) + "\n");

                // 图表是否存在？ onCreate中创建图标
                // 自己有多少个点
                List<Float> pressList = draw.getPressList();


                // 基于当前点的数量初始化图标
                // 清空之前的数据
                xRawDatas.clear();

                // 绘制
                for (int i=0;i< pressList.size();i++) {
                    xRawDatas.add(String.valueOf(i+1));
                }

                yList = new ArrayList<>();
                for (int i = 0; i < pressList.size(); ++i) {
                    yList.add((double)pressList.get(i) * 10);
                    if (DEBUG) {
                        Log.d(TAG, (double) (pressList.get(i) * 10) + "");
                    }
                }

                lineView.setData(yList, xRawDatas, 10, 1);
                lineView.invalidate();

                // clear result
                draw.setPressList();
                draw.setFlag();
                draw.setCount();
                draw.setXTimeList();

                /*
                // Pressure
                List<Float> list2 = draw.getPressList();
                if (list2.size() == 0) {
                    tv_allView.append("NULL");
                } else {
                    tv_allView.append("PressMax: " + String.valueOf(Collections.max(list2) * 10) + ", " +
                            "PressMin: " + String.valueOf(Collections.min(list2) * 10) + "\n");


                    yList = new ArrayList<Double>();
                    for (int i = 0; i < 50; ++i) {
                        yList.add((double)(list2.get(i) * 10));
                        Log.d("bbbbbbbbbbbb", (double)(list2.get(i) * 10) + "");
                    }

                    for (int i = 0; i < 50; ++i) {
                        xRawDatas.add(String.valueOf(i+1));
                    }
                    xRawDatas.add(String.valueOf(51));


                    lineView.setData(yList, xRawDatas, 10, 1);
                    lineView.invalidate();

                    draw.setPressList();
                }
                draw.setFlag();
                draw.setCount();
                draw.setXTimeList();
                */
            }

        };

        MyThread thread = new MyThread();
        thread.start();

        /*
        yList = new ArrayList<Double>();
        for (int i = 0; i < 50; ++i) {
            yList.add(0.0);
            xRawDatas.add(String.valueOf(i+1));
        }
        xRawDatas.add(String.valueOf(51));
        lineView.setData(yList, xRawDatas, 10, 1);
        */


        bt_clear.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                draw.clear();
                tv_allView.setText(" ");
            }
        });

        bt_touch.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                draw.setTouchEvent();
            }
        });

    }

    class MyThread extends Thread {
        @Override
        public void run() {
            while (true) {
                if (draw.getFlag() == false) {
                    Log.d("MyThread", "aaaaaaaaaaaaaaaa");
                    handler.sendEmptyMessage(0);
                    try {
                        Thread.sleep(100);
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            }
        }
    }

    private double computeVariance(List<Long> b){
        List<Long> a = new LinkedList<>();
        for (int i = 0; i < b.size() - 1; i++) {
            a.add(b.get(i+1) - b.get(i));
        }

        double variance = 0;//方差
        double average = 0;//平均数
        int i,len=a.size();
        double sum = 0,sum2 = 0;

        for(i = 0; i < len; i++){
            sum += a.get(i);
        }
        average = sum / len;
        for(i=0; i < len; i++){
            sum2 += (a.get(i)-average)*(a.get(i)-average);
        }
        variance = sum2 / len;
        return variance;
    }
}
